CREATE TABLE book(book_id INTEGER "book"PRIMARY KEY AUTOINCREMENT,
            title VARCHAR(50),
            author VARCHAR(30),
            price DECIMAL(8,2),
            amount INT);
            

INSERT INTO book (title, author, price, amount) 
VALUES('Мастер и Маргарита', 'Булгаков М.А.', 670.99, 3),
('Белая гвардия', 'Булгаков М.А.', 540.50, 5),
('Идиот', 'Достоевский Ф.М.', 460.00, 10),
('Братья Карамазовы','Достоевский Ф.М.',799.01,2)
("Стихотворения и поэмы", "Есенин С.А.",650.00, 15);













Вывести название, автора  и стоимость (цена умножить на количество) тех книг, стоимость которых больше 4000 рублей*/

SELECT title, author, price
FROM book
WHERE amount < 10;

/*
Вывести название, автора и цену тех книг, которые написал Булгаков, ценой больше 600 рублей
*/

SELECT title, author, price
FROM book
WHERE price > 600 AND author="Булгаков М.А.";

/*Вывести название, цену  тех книг, которые написал Булгаков или Есенин, ценой больше 600 рублей
*/

SELECT title, author, price
FROM book
WHERE author="Булгаков М.А." OR author="Есенин С.А." AND price > 600 ;


/*Вывести название, автора,  цену  и количество всех книг, цена которых меньше 500 или больше 600, а стоимость всех экземпляров этих книг больше или равна 5000.*/

SELECT title, author, price, amount
FROM book
WHERE (price < 500 OR price > 600) AND price * amount >= 5000;

/*Выбрать названия и количества тех книг, количество которых от 5 до 14 включительно.*/

SELECT title, amount
FROM book
WHERE amount BETWEEN 5 AND 14;
/*WHERE amount >= 5 AND amount <=14;*/

/*Выбрать названия и цены книг, написанных Булгаковым или Достоевским.*/

SELECT title, price 
FROM book
WHERE author IN ('Булгаков М.А.', 'Достоевский Ф.М.');


/*Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),  а количество или 2, или 3, или 5, или 7 .*/

SELECT title, author, price, amount
FROM book
WHERE (price >= 540.50 and price <= 800.00) and (amount IN (2,3,5,7));


/*ШАБЛОНЫ*/

/*Вывести названия книг, начинающихся с буквы «Б».*/

SELECT title
FROM book
WHERE title LIKE 'Б%';



/*Вывести название книг, состоящих ровно из 5 букв.*/

SELECT title
FROM book
WHERE title LIKE '_____';



/*Вывести книги, название которых длиннее 5 символов*/

SELECT title
FROM book
WHERE title LIKE '_____%';




/*Вывести названия книг, которые содержат букву "и" как отдельное слово, если считать, 
что слова в названии отделяются друг от друга пробелами и не содержат знаков препинания.*/

SELECT title
FROM book
WHERE title LIKE '% и %';




/*Вывести названия книг, которые состоят ровно из одного слова, если считать, что слова в названии отделяются друг от друга пробелами.*/

SELECT title
FROM book
WHERE title  NOT LIKE '% %';




INSERT INTO book (title, author, price, amount) 
VALUES('Капитанская дочка', 'Пушкин С.А.', 520.50, 7),
('Дети полуночи', 'Рушди Салман', 950.00, 5),
('Лирика ', 'Гумилев Н.С.', 460.00, 10),
('Поэмы','Бехтерев С.С.', 460.00, 10);



/*Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». 
Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и инициалами обязателен пробел, 
инициалы записываются без пробела в формате: буква, точка, буква, точка. Информацию отсортировать по названию книги в алфавитном порядке.
*/

SELECT title, author
FROM book
WHERE title LIKE '_%_ _%_'
AND (author LIKE '_%_ %С.'
OR author LIKE '_%_ С.%')
ORDER BY 1;


/*
---------------------------
WHERE title  LIKE '_% _% %' AND author LIKE '_% C. _.';
*/

SELECT book_id, round(AVG(price), 2 ), MIN(price), MAX(price)
FROM book;














CREATE TABLE book(book_id INTEGER "book"PRIMARY KEY AUTOINCREMENT,
            title VARCHAR(50),
            author VARCHAR(30),
            price DECIMAL(8,2),
            amount INT);
            
INSERT INTO book (title, author, price, amount) 
VALUES('Мастер и Маргарита', 'Булгаков М.А.', 670.99, 3),
('Белая гвардия', 'Булгаков М.А.', 540.50, 5),
('Идиот', 'Достоевский Ф.М.', 460.00, 10),
("Стихотворения и поэмы", "Есенин С.А.",650.00, 15);

/*Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),  а количество или 2, или 3, или 5, или 7 .*/

SELECT title, author, price, amount
FROM book
WHERE (price >= 540.50 and price <= 800.00) and (amount IN (2,3,5,7));*/

/*Вывести название, автора и цены книг. Информацию  отсортировать по названиям книг в алфавитном порядке*/
/*
Вывести автора, название и количество книг, в отсортированном в алфавитном порядке по автору и по убыванию количества, для тех книг, цены которых меньше 750 рублей.*/

SELECT author, title, amount
FROM book
WHERE price < 750
ORDER BY 1, 3 DESC;
-- ORDER BY author, amount DESC;*/


/*Вывести  автора и название  книг, количество которых принадлежит интервалу от 2 до 14 (включая границы). Информацию  отсортировать сначала по авторам (в обратном алфавитном порядке), а затем по названиям книг (по алфавиту).*/

SELECT author, title
FROM book
WHERE amount >= 2 AND amount <= 14
ORDER BY 1 DESC, 2;*/

/*ШАБЛОНЫ*/

/*Вывести названия книг, начинающихся с буквы «Б».*/

SELECT title
FROM book
WHERE title LIKE 'Б%';




/*Вывести название книг, состоящих ровно из 5 букв.*/
SELECT title
FROM book
WHERE title LIKE '_____';



/*Вывести книги, название которых длиннее 5 символов*/
SELECT title
FROM book
WHERE title LIKE '_____%';




/*Вывести названия книг, которые содержат букву "и" как отдельное слово, если считать, что слова в названии отделяются друг от друга пробелами и не содержат знаков препинания.*/
SELECT title
FROM book
WHERE title LIKE '% и %';




/*Вывести названия книг, которые состоят ровно из одного слова, если считать, что слова в названии отделяются друг от друга пробелами.*/
SELECT title
FROM book
WHERE title  NOT LIKE '% %';




INSERT INTO book (title, author, price, amount) 
VALUES('Капитанская дочка', 'Пушкин С.А.', 520.50, 7),
('Дети полуночи', 'Рушди Салман', 950.00, 5),
('Лирика ', 'Гумилев Н.С.', 460.00, 10),
('Поэмы','Бехтерев С.С.', 460.00, 10);



/*Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка. 
Информацию отсортировать по названию книги в алфавитном порядке.*/

SELECT title, author
FROM book
WHERE title LIKE '_%_ _%_'
AND (author LIKE '_%_ %С.'
OR author LIKE '_%_ С.%')
ORDER BY 1;


/*
---------------------------
WHERE title  LIKE '_% _% %' AND author LIKE '_% C. _.';
*/

SELECT book_id, round(AVG(price), 2 ), MIN(price), MAX(price)
FROM book;


SELECT title, author, price
FROM book
ORDER BY title;


-- Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». В результат включить только тех авторов, у которых суммарная стоимость книг (без учета книг «Идиот» и «Белая гвардия») более 5000 руб. Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости.

SELECT author, 
SUM(price*amount) AS Стоимость
FROM book
WHERE title <> "Белая гвардия" AND title <> "Идиот"
GROUP BY author
HAVING SUM(price*amount) > 5000 
ORDER BY 2 DESC;

-- ВЛОЖЕННЫЙ ЗАПРОС

-- сравнения выражения с результатом вложенного запроса;
-- определения того, включено ли выражение в результаты вложенного запроса;
-- проверки того, выбирает ли запрос определенные строки.

WHERE | HAVING выражение оператор_сравнения (вложенный запрос);
WHERE | HAVING выражение, включающее вложенный запрос;
WHERE | HAVING выражение [NOT] IN (вложенный запрос);
WHERE | HAVING выражение  оператор_сравнения  ANY | ALL (вложенный запрос).

-- Вывести информацию о самых дешевых книгах, хранящихся на складе.

SELECT author, title, price
FROM book
WHERE price = (SELECT MIN(price)
              FROM book);



/*Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется*/

SELECT author, title, amount
FROM book
WHERE amount IN (SELECT amount 
FROM book 
GROUP BY amount
HAVING COUNT(amount) < 2);


/*Вложенный запрос, возвращающий несколько значений одного столбца, можно использовать для отбора записей с помощью операторов ANY и ALL совместно с операциями отношения (=, <>, <=, >=, <, >).*/

/*Вывести информацию о тех книгах, количество которых меньше самого маленького среднего количества книг каждого автора.*/


SELECT author, title, price, amount
FROM book
WHERE amount < ANY(SELECT ROUND(AVG(amount),0)
                FROM book
                GROUP BY author);

/*Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора.*/


SELECT author, title, price
FROM book
WHERE price < ANY(SELECT MIN(price) FROM book GROUP BY author);

/*Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. 

Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. Последнему столбцу присвоить имя Заказ. В результат не включать книги, которые заказывать не нужно.*/


SELECT title, author, amount, ((SELECT MAX(amount) FROM book) - amount) AS Заказ
FROM book
WHERE ((SELECT MAX(amount) FROM book) != amount);
-- WHERE ((SELECT MAX(amount) FROM book) - amount) > 0;


/*Вывести информацию о книгах, количество экземпляров которых отличается от среднего количества экземпляров книг на складе более чем на 3,  а также указать среднее значение количества экземпляров книг.*/

SELECT titleб author, 
amount, ABS(amount-(SELECT AVG(amount) FROM book)) > 3, 
(SELECT AVG(amount) FROM book)
FROM book;


SELECT title, 
    author, 
    amount, 
    (SELECT FLOOR(AVG(amount)) FROM book) AS AVERAGE_AMOUNT
FROM book
WHERE ABS(amount-(SELECT AVG(amount) FROM book)) > 3;


/*Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.*/

SELECT author, title, price
FROM book
WHERE price <= (SELECT AVG(price)
                       FROM book)
ORDER BY 3 DESC;     


/*Вывести информацию о книгах, количество экземпляров которых отличается от среднего количества экземпляров книг на складе более чем на 3. То есть нужно вывести и те книги, количество экземпляров которых меньше среднего на 3, или больше среднего на 3.
*/

SELECT title, author, amount
FROM book
WHERE ABS(amount - (SELECT AVG(amount) FROM book)) > 3;

/*Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.*/


SELECT author, title, price
FROM book
WHERE (price - (SELECT MIN(price) FROM book) ) <= 150
ORDER BY 3;

—IN

— WHERE имя_столбца IN (вложенный запрос, возвращающий один столбец)

/*Оператор IN определяет, совпадает ли значение столбца с одним из значений, содержащихся во вложенном запросе. При этом логическое выражение после WHERE получает значение истина. Оператор NOT IN выполняет обратное действие – выражение истинно, если значение столбца не содержится во вложенном запросе.*/
/*Вывести информацию о книгах тех авторов, общее количество экземпляров книг которых не менее 12.*/

SELECT title, author, price, amount
FROM book 
WHERE author IN(SELECT author FROM book GROUP BY author HAVING SUM(amount) >= 12) ;

Вложенный запрос отбирает двух авторов (Достоевского и Есенина). А в основном запросе для каждой записи таблицы book  проверяется, входит ли автор книги в отобранный список, если входит - информация о книге включается в запрос.



